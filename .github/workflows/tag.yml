---
# This workflow tags on pushes to main
#
# https://github.com/marketplace/actions/create-tags-from

name: Tag and Release
on:
    push:
        branches: ["main"]
jobs:
    tag:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Create Tag
              id: createtag
              shell: bash
              run: |
                #!/bin/bash
                set -euox pipefail

                TAG="$(cat cmd/go_go_gadget/root.go | grep "var version = " | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')"

                echo -e "TAG: $TAG"
                echo -e "GIT_USER_NAME: $GIT_USER_NAME"
                echo -e "GIT_USER_EMAIL: $GIT_USER_EMAIL"

                # In case only a shallow clone was done
                git fetch --tags

                if ! git tag | grep "${TAG}"; then
                git config user.name ${GIT_USER_NAME}
                git config user.email ${GIT_USER_EMAIL}

                git tag -a ${TAG} -m ${TAG}
                git push --follow-tags

                echo "version=${TAG}" >> $GITHUB_OUTPUT
                echo "isnewtag=true" >> $GITHUB_OUTPUT
                else
                echo "'${TAG}' already exists. No action taken."
                echo "isnewtag=false" >> $GITHUB_OUTPUT
                fi
              env:
                GIT_USER_NAME: ${{ github.event.head_commit.author.username }}
                GIT_USER_EMAIL: ${{ github.event.head_commit.author.email }}

            - name: Show createtag Outputs
              run: |
                echo "$OUTPUTS"
              shell: bash
              env:
                OUTPUTS: ${{ toJSON(steps.createtag.outputs) }}

            - name: Create Release
              if: steps.createtag.outputs.isnewtag == 'true'
              id: createrelease
              uses: actions/create-release@latest
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ steps.createtag.outputs.version }}
                release_name: Release v${{ steps.createtag.outputs.version }}
                draft: false
                prerelease: false
